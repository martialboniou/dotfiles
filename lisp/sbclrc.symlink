;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; ASDF from QUICKLISP
#-quicklisp
(let* ((quicklisp-directory-name  (merge-pathnames ".quicklisp/" (user-homedir-pathname)))
       (quicklisp-setup-file-name (merge-pathnames "setup.lisp"  quicklisp-directory-name)))
 (if (probe-file quicklisp-setup-file-name)
    (load quicklisp-setup-file-name)
  (progn
    (load (merge-pathnames ".ql_install" (user-homedir-pathname)))
    (format t "Reload SBCL please.")
    (exit))))
;; project directory example: ~/.config/common-lisp/source-registry.conf.d/projects.conf
;; containing the following snippet: (:tree (:home "MyLispDirectory/Projects"))

;; in quicklisp/setup.lisp, replace:
;; (ensure-asdf-loaded)
;; by:
;; #-asdf (load (qmerge "asdf.lisp"))
;; to get a convenient version (SBCL ASDF2 version may have some non-standard quirks)

;;; STALE FASL RECOMPILATION TRICK
(defmethod asdf:perform :around ((o asdf:load-op) (c asdf:cl-source-file))
 (handler-case (call-next-method o c)
  (sb-ext:invalid-fasl ()
   (asdf:perform (make-instance 'asdf:compile-op) c)
   (call-next-method))))
