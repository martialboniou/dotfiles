# .zshrc.local_path for macOS/openBSD/Linux
#
# Copyright (c) 2025 <hondana@gmx.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE

add_path () {
  [[ -d "$1" ]] && path=("$1" $path)
}

absolute_path () {
  echo $(perl -e 'use Cwd "abs_path"; print abs_path("$1");')
}

# source one or each file in a path
_source_path () {
  if [[ -f "$1" && -r "$1" ]]; then
    source "$1"
    return 0
  elif [[ -d "$1" && -x "$1" ]]; then
    foreach file in $(find $1 -name "[0-9]*.zsh" -type f | sort -r 2>/dev/null)
      # source in reverse order
      source $file
    end
    return 0
  else
    return 1
  fi
}

# complete global path from env/dynamic
_complete_path () {
  local env_directory="${ZDOTDIR}/paths"
  _source_path "${env_directory}" || return 0
}

# get the full path
_fetch_path () {
  # TODO: write a script to purge this file
  # local cache_file="${ZDOTDIR}/cache/local_path"
  # if [[ -r ${cache_file} ]]; then
  #   source ${cache_file}
  #   export PATH="${__PATH}:${PATH}"
  # else
    ## DYNAMICALLY GENERATED LOCAL PATH (from scripts/binaries; eg: `luarocks path --bin`)
    _complete_path
    # __PATH=${PATH}
    # env_vars=( __PATH LUA_PATH LUA_CPATH GOPATH HOMEBREW_NO_ENV_HINTS HOMEBREW_EDITOR )
    # truncate -s 0 ${cache_file}
    # for ev in "${env_vars[@]}"; do
    #   print export ${ev}=\"${(P)ev}\" >>| ${cache_file}
    # done
    # NOTE: IMPORTANT variable to ensure this function is called ONCE too (see below)
  # fi
}

# NOTE: don't fetch path if already done
[ -z "${__ZSHRC_LOCAL_PATH_SOURCED:-}" ] && _fetch_path

export __ZSHRC_LOCAL_PATH_SOURCED=1
